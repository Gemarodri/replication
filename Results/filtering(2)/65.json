{
    "Title" : "Performance of defect prediction in rapidly evolving software",
    "Id" : 65,
    "Date" : 2015,
    "Published" : "Release Engineering (RELENG)",
    "Authors": {
        "Name": ["Davide G.Cavezza"],
        "Name2": ["Roberto Pietrantuono"],
        "Name3": ["Stefano Russo"],
        "Country":["Italy"]
        },
    "Type_paper" : "Workshop",
    "Project" :{ 
        "Name": ["Eclipse JDT"], 
        "Dates":["2001/06/05-2014/12/13"],
        },
    "Volume_data":{
        "Metric": ["#Defective_commits"],
        "Size":[13984]
        },
    "Versioning":["Git"],
    "Language_used":["Java"],
    "Improved_SZZ": "No",
    "TTV_SZZ": "No",
    "Purpose":" Defect prediction",
    "Elements_risk_assessment":"BIC could be not the pc analyzed ",
    "EaseOf_Reproducibility":"No",
    "Design":"quantitative&qualitative",
    "Collection": [""],
    "UseOF-SZZ": "They use the SZZ algorithm to distinguish between defective and non-defective commits",
    "Summary": " To Analyze the performance of defect prediction in rapidly evolving software. Framed in a high commit frequency
context, we set up an approach to continuously refine prediction models by using new commit data, and predict whether or not an
attempted commit is going to introduce a bug",
    "Outcome": " Promising results about the applicability of a dynamic approacg to defect prediction model learning."
}