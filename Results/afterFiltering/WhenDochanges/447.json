{
    "Title" : "Evaluation of Semantic Interference Detection in Parallel Changes: an Exploratory
Experiment",
    "Id" : 447,
    "Date" : 2007,
    "Published" : "Software Maintenance, 2007. ICSM 2007. IEEE International Conference on",
    "Authors": {
        "Name": ["Danhua Shao"],
        "Name2": ["Sarfraz Khurshid"],
        "Name3": ["Dewayne E Perry"],
        "Country":["USA"]
        },
    "Type_paper" : "Conference (10)",
    "Project" :{ 
        "Name": ["5ESS"], 
        "Dates":["NaN"],
        },
    "Volume_data":{
        "Metric": [""],
        "Size":[ ]
        },
    "Versioning":["SCCS"],
    "Language_used":["C/C++"],
    "Improved_SZZ": "No",
    "TTV_SZZ": "No",
    "Purpose":" New approach",
    "Elements_risk_assessment":" ",
    "EaseOf_Reproducibility":"No",
    "Design":"quantitative&qualitative",
    "Collection": [""],
    "UseOF-SZZ": "They similarly identify changes, but differ in how we identify fault-inducing changes. The approach is based on the semantic analysis 
    on the changes and their interference, while SZZ focuses on mining version histories and fault databases.",
    "Summary": " the design of the experiment is itself a significant contribution and exemplifies how to mine software repositories rather 
    than use artificial cases for rigorous experimental evaluations.",
    "Outcome": " Semantic interference is significantly higher in high group (twice the other two); 
    The overhead of using our semantic interference detection approach is very low and can help 
    developers to find faults very early"
}