{
    "Title" : "Classifying Software Changes: Clean or Buggy?",
    "Id" : 52,
    "Date" : 2008,
    "Published" : "IEEE Transactions on Software Engineering",
    "Authors": {
        "Name": ["Sunghun Kim"],
        "Name": ["E. James Whitehead"],
        "Name": ["Yi Zhang"],
        "Country":["EE.UU"]
        },
    "Type_paper" : "Journal",
    "Project" :{ 
        "Name": ["Apache","Bugzilla","Columba","Gaim","GForge","JEdit","Mozilla","Eclipse JDT","Plone","PostgreSQL","Scarab","Subversion" ], 
        "Dates":["NaN","NaN","NaN","NaN","NaN","NaN","NaN","NaN","NaN","NaN","NaN","NaN"],
        },
    "Volume_data":{
        "Metric": ["#cleanChanges(Total)","#buggychanges(Total)"],
        "Size":[ 8285,3505]
        },
    "Versioning":["CVS"],
    "Language_used":["C/C++/Java "],
    "Improved_SZZ": "yes",
    "TTV_SZZ": "Yes",
    "Purpose":" To predicts the existence of bugs in software changes. ",
    "Elements_risk_assessment":"The pc could be not a BIC ",
    "EaseOf_Reproducibility":"No",
    "Design":"quantitative",
    "Collection": [""],
    "UseOF-SZZ": "To locate the BIC.The discovered origins are identified as bug-introducing changes.",
    "Summary": " This paper introduces a new technique for predicting latent software bugs, called change classification. It uses a machine learning classifier to determine whether a new software change is more similar to prior buggy changes or clean changes. ",
    "Outcome": " The trained classifier can classify changes as buggy or clean, with a 78 percent accuracy and a 60 percent buggy change recall on average. "
}