{
    "Title" : "Learning from Bug-introducing Changes
to Prevent Fault Prone Code",
    "Id" : 411,
    "Date" : 2007,
    "Published" : "international workshop on Principles of software evolution: in conjunction with the 6th ESEC/FSE joint meeting",
    "Authors": {
        "Name": ["Lerina Aversano"],
        "Name2": ["Luigi Cerulo"],
        "Name3": ["Concettina Del Grosso"],
        "Country":["Italy"]
        },
    "Type_paper" : "workshop (9)",
    "Project" :{ 
        "Name": ["JHotDraw","DNSJava"], 
        "Dates":["NaN","NaN"],
        },
    "Volume_data":{
        "Metric": ["#snapshots", "releases"],
        "Size":[ [132,1204],["5.2–5.4B2","0.3–2.0.2"]]
        },
    "Versioning":["CVS/SVN"],
    "Language_used":["Java"],
    "Improved_SZZ": "Yes",
    "TTV_SZZ": "Yes",
    "Purpose":" New technique",
    "Elements_risk_assessment":" Such backward tracking is performed by using
a line change detection algorithms which maps homologue lines of two subsequent snapshots",
    "EaseOf_Reproducibility":"Yes",
    "Design":"quantitative",
    "Collection": [""],
    "UseOF-SZZ": "to find the set of changes which introduce a bug fixed later (they cited the 
    Improved_SZZ not the SZZ paper to locate the BIC)",
    "Summary": "They use a technique to identify bug-introducing
    changes to train a model that can be used to predict if a new change may introduces or not a bug.",
    "Outcome": " "
}