{
    "Title" : "Mining Metrics to Predict Component Failures",
    "Id" : 349,
    "Date" : 2006,
    "Published" : "ICSE",
    "Authors": {
        "Name": ["Nachiappan Nagappan"],
        "Name2": ["Thomas Ball"],
        "Name3": ["Andreas Zeller"],
        "Country":["USA"],
        "Country":["Germany"]
        },
    "Type_paper" : "Conference (10)",
    "Project" :{ 
        "Name": ["Internet Explorer","IIS w3 server core","Process Messaging Component","DirectX","NetMeeting"], 
        "Dates":["NaN","NaN","NaN","NaN","NaN"],
        },
    "Volume_data":{
        "Metric": ["#modules"],
        "Size":[ ]
        },
    "Versioning":[""],
    "Language_used":["C++/C#"],
    "Improved_SZZ": "Yes",
    "TTV_SZZ": "No",
    "Purpose":" Regresion model",
    "Elements_risk_assessment":" The location of the fix gave us the location of the post-release defect.",
    "EaseOf_Reproducibility":"No",
    "Design":"quantitative",
    "Collection": [""],
    "UseOF-SZZ": "To location in the code that caused the problem",
    "Summary": " built regression models that accurately predict the likelihood of post-release defects for new entities.",
    "Outcome": " DO NOT use complexity metrics without validating them for your project. DO use metrics that are validated from history to identify
low-quality components."
}