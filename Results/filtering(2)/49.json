{
    "Title" : "Bug Inducing Analysis to Prevent Fault Prone Bug Fixes.",
    "Id" : 49,
    "Date" : 2014,
    "Published" : "Retrieved February",
    "Authors": {
        "Name": ["Haoyu Yang"],
        "Name2": ["Chen Wang"],
        "Name3": ["Qingkai Shi"],
        "Name4": ["Yang Feng"],
        "Name5": ["Zhenyu Chen"],
        "Country":["China"]
        },
    "Type_paper" : "Journal",
    "Project" :{ 
        "Name": ["JEdit","Protostuff","Encog" ], 
        "Dates":["NaN","NaN","NaN"],
        },
    "Volume_data":{
        "Metric": ["#BIC_is_A_FC"],
        "Size":[144,71,39]
        },
    "Versioning":["CVS"],
    "Language_used":["Java"],
    "Improved_SZZ": "yes",
    "TTV_SZZ": "No",
    "Purpose":" Bug inducing change ",
    "Elements_risk_assessment":"pc could be not the BIC ",
    "EaseOf_Reproducibility":"",
    "Design":"quantitative&qualitative",
    "Collection": ["SoruceForge","googlecode","Github"],
    "UseOF-SZZ": "to track the location of the code changes introducing the bug",
    "Summary": " An empirical study on bug inducing analysis to discover the types and features of fault prone bug fixes. They analyze the statistics to find out what types of change are most prone to
induce new bugs when they are intended to fix a bug",
    "Outcome": " that the codeAdded and codeChanged changes, especially addition or modification of the if conditional statements in bug-fix commits are apt to cause more bugs in the future."
}