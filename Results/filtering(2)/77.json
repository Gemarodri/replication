{
    "Title" : "An Empirical Study of the Interplay between Architecture and Software Quality using Evolutionary History of Software",
    "Id" : 77,
    "Date" : 2016,
    "Published" : "George Mason University",
    "Authors": {
        "Name": ["Ehsan Kouroshfar"],
        "Country":["USA"]
        },
    "Type_paper" : "PhD thesis(129)",
    "Project" :{ 
        "Name": ["HBase","Hive","OpenJPA","Camel","Cassandra","Hive","OpenJPA"], 
        "Dates":["NaN","NaN","NaN","NaN","NaN","NaN","NaN"],
        },
    "Volume_data":{
        "Metric": [""],
        "Size":[ ]
        },
    "Versioning":["Subversion"],
    "Language_used":["java"],
    "Improved_SZZ": "No",
    "TTV_SZZ": "Yes",
    "Purpose":" Software maintenance, software architecture",
    "Elements_risk_assessment":" Defect Extractor tool could give you wrong buggy changes",
    "EaseOf_Reproducibility":"No",
    "Design":"quantitative&qualitative",
    "Collection": ["Bugzilla/Jira"],
    "UseOF-SZZ": " Linking a bug database and a version archive of a project for finding fix-inducing changes e.g, searching the commit logs for specific tokens like bugs, fixes,and defects followed by a number. They used Defect Extractor tool to see which changes introduced the error",
    "Summary": " It provides empirical evidence of the importance of software architecture on defect proneness of software systems, ",
    "Outcome": " approach for using evolutionary history of a software system to detect defective modules and architectural problems"
}