{
    "Title" : "Using fault history to improve mutation reduction",
    "Id" : 123,
    "Date" : 2013,
    "Published" : "In Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering",
    "Authors": {
        "Name": ["Laura Inozemtseva"],
        "Name2": ["Hadi Hemmati"],
        "Name3": ["Reid Holmes"],
        "Country":["Canada"]
        },
    "Type_paper" : "Short (4)",
    "Project" :{ 
        "Name": ["Apache POI"], 
        "Dates":["NaN"],
        },
    "Volume_data":{
        "Metric": ["#LOC"],
        "Size":[295000 ]
        },
    "Versioning":[""],
    "Language_used":["Java"],
    "Improved_SZZ": "Yes",
    "TTV_SZZ": "No",
    "Purpose":" New Method in testing and Debugging",
    "Elements_risk_assessment":" The BIC could be no the BIC",
    "EaseOf_Reproducibility":"No",
    "Design":"qualitative",
    "Collection": [""],
    "UseOF-SZZ": "They use SZZ to combine information from POIâ€™s version control repository and its bug tracker to identify historically faulty files",
    "Summary": " They proposed a new non-random mutant reduction method: evaluating only the faulty-file mutants, or mutants generated by altering files that are 
    known to have contained many faults in the past.",
    "Outcome": " The pilot study suggests that this method preferentially chooses mutants that will survive mutation testing"
}